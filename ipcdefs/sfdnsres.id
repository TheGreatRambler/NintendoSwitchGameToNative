type packed_addrinfo = unknown;

interface nn::socket::resolver::IResolver is sfdnsres {
	[0] SetDnsAddressesPrivate(u32, buffer<unknown, 5, 0>);
	[1] GetDnsAddressPrivate(u32) -> buffer<unknown, 6, 0>;
	[2] GetHostByName(u8, u32, u64, pid, buffer<unknown, 5, 0>) -> (u32, u32, u32, buffer<unknown, 6, 0>);
	[3] GetHostByAddr(u32, u32, u32, u64, pid, buffer<unknown, 5, 0>) -> (u32, u32, u32, buffer<unknown, 6, 0>);
	[4] GetHostStringError(u32) -> buffer<unknown, 6, 0>;
	[5] GetGaiStringError(u32) -> buffer<unknown, 6, 0>;
	[6] GetAddrInfo(bool enable_nsd_resolve, u32, u64 pid_placeholder, pid, buffer<i8, 5, 0> host, buffer<i8, 5, 0> service, buffer<packed_addrinfo, 5, 0> hints) -> (i32 ret, u32 bsd_errno, u32 packed_addrinfo_size, buffer<packed_addrinfo, 6, 0> response);
	[7] GetNameInfo(u32, u32, u64, pid, buffer<unknown, 5, 0>) -> (u32, u32, buffer<unknown, 6, 0>, buffer<unknown, 6, 0>);
	[8] RequestCancelHandle(u64, pid) -> u32;
	[9] CancelSocketCall(u32, u64, pid);
}
